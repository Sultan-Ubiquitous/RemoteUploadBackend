// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(cuid())
  email String? @unique
  
  tokens AuthToken[]
  organizationOwned Organization?
  organizationsMembership OrganizationMember[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Organization {
  id String @id @default(cuid())
  name String
  Slug String
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String @unique

  editors OrganizationMember[]
}

//join table
model OrganizationMember{
  id String @id @default(cuid())
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  user User @relation(fields: [userId], references: [id])
  userId String
  @@unique([organizationId, userId])


  createdAt DateTime @default(now())

}

model AuthToken{
  id String @id @unique @default(cuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  accessToken String
  refreshToken String?
  expiryDate DateTime?
  tokenType String?
  scope String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
